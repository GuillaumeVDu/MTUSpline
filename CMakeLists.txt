CMAKE_MINIMUM_REQUIRED (VERSION 2.8) 
PROJECT(MTUSpline)

SET(BOOST_MIN_VERSION "1.48.0")
SET(CMAKE_POSITION_INDEPENDENT_CODE ON) # For Dynamic loading
SET(CMAKE_VERBOSE_MAKEFILE OFF)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR})

IF(WIN32)
	SET(XSD_EXECUTABLE "C:/Program Files (x86)/CodeSynthesis XSD 4.0/")
	SET(Boost_USE_STATIC_LIBS ON)
	
	
	ADD_DEFINITIONS(-DWIN32)
	ADD_DEFINITIONS(-DWINDOWS)
	SET(CMAKE_C_FLAGS "ws2_32.lib")
	SET(WINLIB ws2_32)
	SET(WINMM winmm)
	SET(dir ${CMAKE_CURRENT_SOURCE_DIR}/bin/Win/)
	SET(EXECUTABLE_OUTPUT_PATH ${dir} CACHE PATH "Build directory" FORCE)
	SET(LIBRARY_OUTPUT_PATH ${dir} CACHE PATH "Build directory" FORCE)
	SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--add-stdcall-alias")

	
ENDIF(WIN32)
IF(UNIX AND NOT APPLE)
	MESSAGE("Linux")
	ADD_DEFINITIONS(-DUNIX)
ENDIF(UNIX  AND NOT APPLE)
IF(APPLE)
	MESSAGE("Mac")
	ADD_DEFINITIONS(-DAPPLE)
ENDIF(APPLE)

IF(UNIX)
    IF(CMAKE_COMPILER_IS_GNUCC)
         SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fvisibility=hidden")
    ENDIF(CMAKE_COMPILER_IS_GNUCC)
	SET(dir ${CMAKE_CURRENT_SOURCE_DIR}/bin/Unix/)
	SET(EXECUTABLE_OUTPUT_PATH ${dir} CACHE PATH "Build directory" FORCE)
	SET(LIBRARY_OUTPUT_PATH ${dir} CACHE PATH "Build directory" FORCE)
	
	SET(CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined,-allow-multiple-definition") # For Dynamic loading
	IF(CMAKE_VERSION VERSION_LESS "3.1")
		IF(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
			SET(CMAKE_CXX_FLAGS "--std=gnu++11 ${CMAKE_CXX_FLAGS}")
		ENDIF()
	ELSE()
		SET(CMAKE_CXX_STANDARD 11)
	ENDIF()
ENDIF(UNIX)

FIND_PACKAGE(Boost COMPONENTS timer chrono thread date_time program_options filesystem system unit_test_framework REQUIRED)
FIND_PACKAGE(XSD REQUIRED)
FIND_PACKAGE(XERCES REQUIRED)

INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${XSD_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${XERCES_INCLUDE_DIR})
INCLUDE_DIRECTORIES(
	${CMAKE_SOURCE_DIR}/FileIO
	${CMAKE_SOURCE_DIR}/FileIO/EMGgenerator
	${CMAKE_SOURCE_DIR}/MTUSpline
	${CMAKE_SOURCE_DIR}/xmlInput
)

add_subdirectory(FileIO)
add_subdirectory(MTUSpline)
add_subdirectory(xmlInput)
add_subdirectory(Test)
